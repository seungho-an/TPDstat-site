---
title: "Writing good codes"
date: 2023-02-21
summary: Tips for writing good codes
---

For problem sets and final projects, I encourage you to write in Rmarkdown which will require two files:

1. An `.Rmd` file (or "RMarkdown file" when spoken) that is a plain-text file that contains the text of your write-up and the code used to do all of the calculations for the assignment. You don't apply markup directly like in Word or Google docs, but by using various text shortcuts, like in Slack. 
2. An output `.pdf` file that contains the compiled version of the Rmd file. Usually, you might call this the write-up and it will be nicely formatted and ready for non-technical folks to read. In other classes, you might write these in Microsoft Word or Google Docs. In this class, this will be the output of compiling (or knitting, in the R lingo) the `.Rmd` file. 



## Writing good code

You'll be writing code to do the analyses in this class. Code, like any language, provides many different ways of saying the same thing. One good practice of coding is to have what's called good coding style. This refers to how you format the code that you so that it is (a) easy for you and others to read, and (b) less prone to making mistakes. Here are some general guidelines for writing R code and Rmd file.

- When writing R code and unless we tell you otherwise, follow the [tidyverse style guide](https://style.tidyverse.org/). For this class, the relevant parts of this document are the first couple of chapters. If you are ever uncertain about how to name something or how to write some code, see this document and it will likely help you quite a bit. 
- Make sure the code chunks in the Rmd file have blank lines above and below them. If you don't have this, it can sometimes cause problems with compilation. 
- Try to keep your lines of code shorter than 80 characters since this makes reading code **much** easier. Usually this means writing some function arguments on a different line. See the style guide (section 2.5) for more on this. 
- Include comments in your code and format them nicely as in [section 3.4](https://style.tidyverse.org/functions.html#comments-1) of the style guide. These comments should explain why you wrote the code you wrote and any notes you had about how you came to this solution. This might include, say, other approaches you tried but didn't work or approaches you might want to try if you ever revisit this. Look at our code and examples to get a sense of how to use comments. In RStudio, you can nicely format a comment by hitting Control-Shift-\\. 
